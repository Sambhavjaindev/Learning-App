package knowledgehb;

import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ButtonGroup;
import javax.swing.JOptionPane;

public class hotquestionshow extends javax.swing.JFrame {

    /**
     * Creates new form hotquestionshow
     */
    connect c;
    int que[],ans[],rand,flag,indinit=0,total_rows_db;
    int p,row;
    String option[],qtype;
     ButtonGroup bgroup;
     String langident;
    public hotquestionshow(connect c,String str) {
        try {
            this.langident=str;
           
            this.c=c;
            p=1;
            c.ps=c.conn.prepareStatement("select hotquestionid from `hotquestions"+langident+"`");
            c.rs=c.ps.executeQuery();
          if(c.rs.next())
          {
            c.rs.last();
            total_rows_db=c.rs.getInt("hotquestionid");
            //System.out.println(total_rows_db);
            row=c.rs.getRow();
             ////////you can apecify no of questions in test by changing value of row variable
          } 
            
            if(row==0)
            {
                JOptionPane.showMessageDialog(null,"No "+langident+" Hot Questions available");
                 
            }
            else
            {
                
                //////////////////////////////////
                //yeh isliye kiya taaki hamara display tabhi chale jab koi question ho 
                initComponents();
                 option=new String[5];
            bgroup= new ButtonGroup();
            bgroup.add(opt1);
            bgroup.add(opt2);
            bgroup.add(opt3);
            bgroup.add(opt4);
 //           bgroup.add(opt5);
            opt1.setVisible(false);
            opt2.setVisible(false);
            opt3.setVisible(false);
            opt4.setVisible(false);
  //          opt5.setVisible(false);
            prev.setVisible(false);
            // jTextArea2.setVisible(false);
            jPanel2.setVisible(false);
            
            setVisible(true);
            this.setLocationRelativeTo(null);
            this.setTitle(langident+" Hot Questions");    
            
            if(row==1)
            {
                nxt.setVisible(false);
            }
            
            que=new int[row];
            ans=new int[row];
            
            display();
            }
        } catch (SQLException ex) {
            Logger.getLogger(hotquestionshow.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane3 = new javax.swing.JScrollPane();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        opt1 = new javax.swing.JRadioButton();
        opt2 = new javax.swing.JRadioButton();
        showans = new javax.swing.JButton();
        nxt = new javax.swing.JButton();
        prev = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea2 = new javax.swing.JTextArea();
        opt4 = new javax.swing.JRadioButton();
        opt3 = new javax.swing.JRadioButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(0, 153, 153));

        jScrollPane1.setAutoscrolls(true);

        jTextArea1.setEditable(false);
        jTextArea1.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jTextArea1.setLineWrap(true);
        jTextArea1.setRows(5);
        jTextArea1.setWrapStyleWord(true);
        jScrollPane1.setViewportView(jTextArea1);

        opt1.setBackground(new java.awt.Color(0, 255, 255));
        opt1.setContentAreaFilled(false);
        opt1.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                opt1StateChanged(evt);
            }
        });

        opt2.setBackground(new java.awt.Color(0, 255, 255));
        opt2.setContentAreaFilled(false);
        opt2.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                opt2StateChanged(evt);
            }
        });

        showans.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        showans.setText("Show Answer");
        showans.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showansActionPerformed(evt);
            }
        });

        nxt.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        nxt.setText("Next");
        nxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nxtActionPerformed(evt);
            }
        });

        prev.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        prev.setText("Previous");
        prev.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                prevActionPerformed(evt);
            }
        });

        jScrollPane2.setBorder(null);

        jTextArea2.setEditable(false);
        jTextArea2.setLineWrap(true);
        jTextArea2.setRows(5);
        jTextArea2.setWrapStyleWord(true);
        jScrollPane2.setViewportView(jTextArea2);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 977, Short.MAX_VALUE)
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jScrollPane2)
                    .addContainerGap()))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 114, Short.MAX_VALUE)
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addGap(7, 7, 7)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        opt4.setBackground(new java.awt.Color(0, 255, 255));
        opt4.setContentAreaFilled(false);
        opt4.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                opt4StateChanged(evt);
            }
        });

        opt3.setBackground(new java.awt.Color(0, 255, 255));
        opt3.setContentAreaFilled(false);
        opt3.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                opt3StateChanged(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jScrollPane1)
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(opt1)
                            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(prev)
                        .addGap(359, 359, 359)
                        .addComponent(showans)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(nxt)
                        .addGap(91, 91, 91))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(opt3)
                            .addComponent(opt4)
                            .addComponent(opt2))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 295, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(opt1, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(opt2, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(opt3, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(17, 17, 17)
                .addComponent(opt4, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(showans, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(prev)
                        .addComponent(nxt)))
                .addGap(11, 11, 11)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jScrollPane3.setViewportView(jPanel1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    void duplicaycheck()
    {
        try{
        int max = total_rows_db; 
        int min = 1; 
        int range = max - min + 1;
        c.ps=c.conn.prepareStatement("select hotquestionid from `hotquestions"+langident+"` where hotquestionid=?");
        do
        {
        // generate random numbers within 1 to 10 
            
            flag=0;
            
            rand = (int)(Math.random() * range) + min; 
           
            
                
                
                c.ps.setString(1,Integer.toString(rand));
                c.rs=c.ps.executeQuery();
                
                if(c.rs.next())
                {System.out.println("question exists for rand="+rand);
                    for(int lr=0;lr<p-1;lr++)
                    {
                        System.out.println("entered loop");
                        if(que[lr]==rand)
                        {
                        flag=1;
                        System.out.println("repeated que");
                        break;
                        
                        }
                       
                    }
                }
                else
                {
                    flag=1;
                    System.out.println("question doesn't exists for rand="+rand);
                }
                
            
            
        } while(flag==1);
        
        System.out.println("final rand="+rand);
        }
            catch(SQLException e)
            {
                System.out.println("errror in duplicacy check "+ e.getMessage());
            }            
    }
  
    private String rbmultilinedisplay(String origoption)
    {
        String st="";
        int indfinal;
         indinit=0;
         indfinal=origoption.indexOf("\n",indinit);
         System.out.println(indinit+" "+indfinal);
  
         while(indfinal!=-1)
         {System.out.println("before "+st);
         
         st+=origoption.substring(indinit,indfinal)+"<br>";
         origoption=origoption.substring(indfinal+1);
         
         System.out.println("bef "+st+" left origoption "+origoption);
        // st=st.concat("<br>");
             System.out.println("aft "+st);
             System.out.println(indinit +" "+indfinal);
//        indinit=indfinal+1;
        indfinal=origoption.indexOf("\n",indinit);
         }
         if(indfinal==-1)
         {
             st=st+origoption;
             System.out.println("final "+st);
         }
         return st;
    }
    private void display()
    {
        
        try {
            
            if(que[p-1]==0)
            {
                duplicaycheck();
                que[p-1]=rand;
                //c.ps.setString(1,Integer.toString(rand));
            }
            else
            {
                //means there is already a value in que[p-1]
                //useful when previous button calls display
            }
            c.ps=c.conn.prepareStatement("select questionscol,optionscol,questiontype from `hotquestions"+langident+"` where hotquestionid="+que[p-1]);
//            c.ps.setString(1,Integer.toString(que[p-1]));
            c.rs=c.ps.executeQuery();
            if(c.rs.next())
            {
                qtype=c.rs.getString("questiontype");
                switch (qtype) {
                    case "Topic":
                        showans.setVisible(false);
                        break;
                    case "Program":
                        showans.setText("Show Explanation");
                        showans.setVisible(true);
                        break;
                    case "Question":
                        showans.setText("Show Answer");
                        showans.setVisible(true);
                        break;
                }
                jTextArea1.setText(qtype+"\n\n");
                System.out.println("question "+p+" "+c.rs.getString("questionscol"));
                jTextArea1.append(c.rs.getString("questionscol"));
                jTextArea1.setCaretPosition(0);
                
                //if options exist then only fetched
                if(!(c.rs.getString("optionscol").equals("Write options(each ending with !!)")))
                {
                    String str=c.rs.getString("optionscol");
                    int index_initial=0;
                    int index_final=str.indexOf("!!",index_initial);
                    
                    //System.out.println("opt1"+index_initial+"   "+index_final);
                    
                    if(index_final!=-1)
                    {
                        option[0]=str.substring(index_initial,index_final);
                        opt1.setText("<html>"+rbmultilinedisplay(option[0])+"</html>");
                        
                        //  System.out.println("opt1 "+index_initial+"   "+index_final);
                        
                        opt1.setVisible(true);
                        index_initial=index_final;
                        index_final=str.indexOf("!!",(index_initial+3));
                    }
                    
                    //  System.out.println("opt2"+index_initial+"   "+index_final);
                    if(index_final!=-1)
                    {
                        option[1]=str.substring((index_initial+3),index_final);
                        //opt2.setText(option[1]);
                        opt2.setText("<html>"+rbmultilinedisplay(option[1])+"</html>");
                        //System.out.println("opt2"+index_initial+"   "+index_final);
                        opt2.setVisible(true);
                        index_initial=index_final;
                        index_final=str.indexOf("!!",(index_initial+3));
                    }
                    
                    // System.out.println("opt3"+index_initial+"   "+index_final);
                    if(index_final!=-1)
                    {
                        option[2]=str.substring((index_initial+3),index_final);
                        opt3.setText("<html>"+rbmultilinedisplay(option[2])+"</html>");
                        //System.out.println("opt3"+index_initial+"   "+index_final);
                        opt3.setVisible(true);
                        index_initial=index_final;
                        index_final=str.indexOf("!!",(index_initial+3));
                    }
                    
                    //System.out.println("opt4"+index_initial+"   "+index_final);
                    if(index_final!=-1)
                    {
                        option[3]=str.substring((index_initial+3),index_final);
                        opt4.setText("<html>"+rbmultilinedisplay(option[3])+"</html>");
                        //System.out.println("opt4"+index_initial+"   "+index_final);
                        opt4.setVisible(true);
           //opt5             index_initial=index_final;
           //opt5             index_final=str.indexOf("!!",(index_initial+3));
                    }
                    
                    // System.out.println("opt5"+index_initial+"   "+index_final);
                /*    if(index_final!=-1)
                    {
                        option[4]=str.substring((index_initial+3),index_final);
                        opt5.setText("<html>"+rbmultilinedisplay(option[4])+"</html>");
                        // System.out.println("opt5"+index_initial+"   "+index_final);
                        opt5.setVisible(true);
                    }*/
                }
            }
            System.out.println("display p value="+p);
        } catch (SQLException ex) {
            Logger.getLogger(hotquestionshow.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }
    
    private void showansActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showansActionPerformed
        
        if(evt.getActionCommand().equals("Show Answer"))
        {
            try {
                c.ps=c.conn.prepareStatement("select correctans,explanation from `hotquestions"+langident+"` where hotquestionid="+que[p-1]);
               // c.ps.setString(1,Integer.toString(que[p-1]));
                c.rs=c.ps.executeQuery();
                if(c.rs.next())
                {
                    jTextArea2.setText("Ans: Option "+c.rs.getString("correctans")+"\nExplanation: "+c.rs.getString("explanation"));
                    jTextArea2.setCaretPosition(0);
                    //jScrollPane2.setVisible(true);
                    /*jTextArea2.setVisible(true);
                    jScrollPane2.setVisible(true);*/
                    jPanel2.setVisible(true);
                }
            } catch (SQLException ex) {
                Logger.getLogger(hotquestionshow.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        else if(evt.getActionCommand().equals("Show Explanation"))
        {
            try {
                System.out.println("khjhjhkjhjkhjhj");
                c.ps=c.conn.prepareStatement("select explanation from `hotquestions"+langident+"` where hotquestionid="+que[p-1]);
                //c.ps.setString(1,Integer.toString(que[p-1]));
                c.rs=c.ps.executeQuery();
                if(c.rs.next())
                { System.out.println("in show exp c.rs.nxt");
                jTextArea2.setText("Explanation: "+c.rs.getString("explanation"));
                jTextArea2.setCaretPosition(0);
                //jScrollPane2.setVisible(true);
                /* jTextArea2.setVisible(true);
                jScrollPane2.setVisible(true);*/
                jPanel2.setVisible(true);
                System.out.println("explanatio should be visible");
                }
            } catch (SQLException ex) {
                Logger.getLogger(hotquestionshow.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_showansActionPerformed

    private void prevActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_prevActionPerformed
        p--;
      //here was score commands(2 lines)
        bgroup.clearSelection();
        opt1.setVisible(false);
        opt2.setVisible(false);
        opt3.setVisible(false);
        opt4.setVisible(false);
//        opt5.setVisible(false);
    /*    jTextArea2.setVisible(false);
        jScrollPane2.setVisible(false);*/
    jPanel2.setVisible(false);
        display();
        switch (ans[p-1]) {//wwhen user returns back to question his answer should be there
            case 1:
            opt1.setSelected(true);

            break;
            case 2:

            opt2.setSelected(true);

            break;
            case 3:

            opt3.setSelected(true);

            break;
            case 4:

            opt4.setSelected(true);

            break;
            case 5:

//            opt5.setSelected(true);
            break;
            default:
            break;
        }

        if(p==1)
        {
            prev.setVisible(false);
            //here was correct1--
        }
        if(p<row)
        {
            nxt.setText("Next");
            nxt.setVisible(true);
        }
        System.out.println("prev p value="+p);
    }//GEN-LAST:event_prevActionPerformed

    private void nxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nxtActionPerformed

        System.out.println("7");
        //calcscore();
        System.out.println("8");
        

            //here was System.out.println("score in next="+correct1);
            p++;
            opt1.setVisible(false);
            opt2.setVisible(false);
            opt3.setVisible(false);
            opt4.setVisible(false);
//            opt5.setVisible(false);
            bgroup.clearSelection();
        /*    jTextArea2.setVisible(false);
            jScrollPane2.setVisible(false);*/
        jPanel2.setVisible(false);
            display();
             switch (ans[p-1]) {//wwhen user returns back to question his answer should be there
            case 1:
                opt1.setSelected(true);
                
                break;
            case 2:
        
                opt2.setSelected(true);
        
                break;
            case 3:
        
                opt3.setSelected(true);
        
                break;
            case 4:
        
                opt4.setSelected(true);
        
                break;
            case 5:
        
//                opt5.setSelected(true);
                break;
            default:
                break;
        }
            if(p==row)
            {
                nxt.setVisible(false);
                //here was nxt.setText("Submit");
            }
            if(p>1)
            {
                prev.setVisible(true);
            }
            System.out.println("nxt p value="+p);

        
        //else part deleted

    }//GEN-LAST:event_nxtActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
if(langident.equals("C++"))
{
    new c(c,langident).setVisible(true);
    
}
else
{
    new j(c, langident).setVisible(true);
}
        this.dispose();
       //this.hide();
    }//GEN-LAST:event_formWindowClosing

    private void opt1StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_opt1StateChanged
        if(opt1.isSelected())
        {
            ans[p-1]=1;
        }
    }//GEN-LAST:event_opt1StateChanged

    private void opt2StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_opt2StateChanged
        if(opt2.isSelected())
        {
            ans[p-1]=2;
        }
    }//GEN-LAST:event_opt2StateChanged

    private void opt3StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_opt3StateChanged
        if(opt3.isSelected())
        {
            ans[p-1]=3;
        }
    }//GEN-LAST:event_opt3StateChanged

    private void opt4StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_opt4StateChanged
        if(opt4.isSelected())
        {
            ans[p-1]=4;
        }
    }//GEN-LAST:event_opt4StateChanged

   

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextArea jTextArea2;
    private javax.swing.JButton nxt;
    private javax.swing.JRadioButton opt1;
    private javax.swing.JRadioButton opt2;
    private javax.swing.JRadioButton opt3;
    private javax.swing.JRadioButton opt4;
    private javax.swing.JButton prev;
    private javax.swing.JButton showans;
    // End of variables declaration//GEN-END:variables
}
